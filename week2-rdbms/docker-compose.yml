version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: week2_postgres
    environment:
      POSTGRES_USER: veri_user
      POSTGRES_PASSWORD: veri_pass
      POSTGRES_DB: veri_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/init-scripts:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - week2_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U veri_user -d veri_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # pgAdmin - PostgreSQL Web UI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: week2_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - week2_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Adminer - Lightweight DB Management
  adminer:
    image: adminer:latest
    container_name: week2_adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha
    networks:
      - week2_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped


volumes:
  postgres_data:
    name: week2_postgres_data
  pgadmin_data:
    name: week2_pgadmin_data

networks:
  week2_network:
    name: week2_network
    driver: bridge